to run locally using node (see README for docker instructions):
-----------------------------------
in command prompt:

cd C:\Users\benja\dockerfiles\docker_node_nginx

to start:
npm start

to start this with no packages:
npm install (use comand prompt as administrator)

to preview:
localhost:3000



react dependencies in this project:

  "devDependencies": {
    "babel-core": "^6.2.1",
    "babel-loader": "^6.2.0",
    "babel-preset-es2015": "^6.1.18",
    "babel-preset-react": "^6.1.18",
    "chai": "^3.5.0",
    "chai-jquery": "^2.0.0",
    "jquery": "^2.2.1",
    "jsdom": "^8.1.0",
    "mocha": "^2.4.5",
    "react-addons-test-utils": "^0.14.7",
    "webpack": "^1.12.9",
    "webpack-dev-server": "^1.14.0"
  },
  "dependencies": {
    "babel-preset-stage-1": "^6.1.18",
    "lodash": "^3.10.1",
    "react": "^0.14.3",
    "react-dom": "^0.14.3",
    "react-redux": "^4.0.0",
    "react-router": "^2.0.1",
    "redux": "^3.0.4"
  }
  

remove this:
    "express-react-views": "^0.10.2",
    sequelize cli
    mysql

the rest are node dependencies


sequelize:

    //build the data model and store it but don't persist it to the database
    //  connection.sync({
    //      force: true,
    //      logging: console.log
    //  }).then(function () {
    //      var articleIPnstance =  Article.build({
    //          title: 'demo title',
    //          slug: 'demo-title',
    //          body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nascetur ridiculus mus. Blandit augue, at blandit dui.'
    //      });
    //      articleInstance.save();
    //  })
    //      .catch(function (error) {
    //          console.log(error);
    //      })



    tasks model:


    "use strict";

module.exports = function(sequelize, DataTypes) {
  var Task = sequelize.define("Task", {
    title: DataTypes.STRING
  }, {
    classMethods: {
      associate: function(models) {
        Task.belongsTo(models.User, {
          onDelete: "CASCADE",
          foreignKey: {
            allowNull: false
          }
        });
      }
    }
  });

  return Task;
};



//render internal template (anything but home)
// app.get('*', function(req, res) {
//     res.render('internal');
// });

// //respond to the http method or 'verb'.
// app.get('/:page', function(req, res){
//     //no need to put a content type as express does a best guess at that
//     //id is stored in the url /:id so we can access it
//     // res.send('<html><head><link href=/assets/style.css type=text/css rel=stylesheet /></head><body><h1>Person: ' + 
//     // req.params.id + '</h1></body></html>')
    
// });

    // //and this is a bit easier too
    // app.get('/api/person/:id', function(req, res) {
    //     // get the data from the database
    //     res.json({firstname: 'John', lastname: 'Doe'}); 
    // });



            //  models.User.findAll({
        //  }).then(function (users) {
        //      userstemp = users;
        //  }).then(function () {
        //      models.Article.findAll({
        //      }).then(function (articles) {
        //          //template will pick up the isAdminPage variable
        //          res.locals.isAdminPage = true;

        //          res.render('admin-react', {
        //              Pg: req.params.page,
        //              Qstr: req.query.qstr,
        //              Usrs: userstemp,
        //              Artic: articles
        //          })
        //      })

        //  });




  